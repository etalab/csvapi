---
version: 2

jobs:
  build:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Get the base reference branch
          command: export BASE_BRANCH=$(base_branch)
      - restore_cache:
          keys:
            - py-cache-{{ arch }}-{{ checksum "poetry.lock" }}
            - py-cache-{{ arch }}-{{ .Branch }}
            - py-cache-{{ arch }}-{{ .Environment.BASE_BRANCH }}
      - run:
          name: Install python dependencies
          command: |
            poetry install
      - save_cache:
          key: py-cache-{{ arch }}-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs
      - save_cache:
          key: py-cache-{{ arch }}-{{ .Branch }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs
      - run:
          name: Lint code
          command: flake8 csvapi
      - run:
          name: Run tests
          command: |
            poetry run pytest --junitxml=reports/python/tests.xml -p no:sugar --color=yes
      - store_test_results:
          path: reports/python
      - run:
          name: Build a distributable package
          command: |
            # Build a wheel release
            if [[ $CIRCLE_TAG ]]; then
                # This is a tagged release, version has been handled upstream
                poetry build
            else
                # Relies on a dev version like "1.2.1.dev" by default
                poetry version $(poetry version -s)$CIRCLE_BUILD_NUM
                poetry build
            fi
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: .
          paths:
            - .

  publish:
    docker:
      - image: cimg/python:3.9
    steps:
      - attach_workspace:
          at: .
      - deploy:
          name: Publish on PyPI
          command: |
            poetry publish --username "${PYPI_USERNAME}" --password "${PYPI_PASSWORD}" --no-interaction

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - /[0-9]+(\.[0-9]+)+/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
          context: org-global
